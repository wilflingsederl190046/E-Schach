Index: src/main/java/com/example/project_echess/ChessClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_echess;\r\n\r\nimport java.io.*;\r\nimport java.net.Socket;\r\nimport java.net.UnknownHostException;\r\n\r\npublic class ChessClient {\r\n    public static void main(String[] args) {\r\n        Socket socket = null;\r\n        try {\r\n            socket = new Socket(\"localhost\", 4711);\r\n\r\n            OutputStream out = socket.getOutputStream();\r\n            PrintStream ps = new PrintStream(out, true);\r\n\r\n            InputStream in = socket.getInputStream();\r\n            BufferedReader buff = new BufferedReader(new InputStreamReader(in));\r\n\r\n            while (buff.ready()) {\r\n                String line = buff.readLine();\r\n                if(line.equals(\"menue_launch\")) {\r\n                    Main.launch();\r\n                } else if(line.startsWith(\"menue_data;\")) {\r\n\r\n                }\r\n            }\r\n\r\n        } catch (UnknownHostException e) {\r\n            System.out.println(\"Unknown Host...\");\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            System.out.println(\"IOProblems...\");\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (socket != null)\r\n                try {\r\n                    socket.close();\r\n                    System.out.println(\"Socket closed...\");\r\n                } catch (IOException e) {\r\n                    System.out.println(\"Socket cannot get closed...\");\r\n                    e.printStackTrace();\r\n                }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/project_echess/ChessClient.java b/src/main/java/com/example/project_echess/ChessClient.java
--- a/src/main/java/com/example/project_echess/ChessClient.java	
+++ b/src/main/java/com/example/project_echess/ChessClient.java	
@@ -16,7 +16,7 @@
             InputStream in = socket.getInputStream();
             BufferedReader buff = new BufferedReader(new InputStreamReader(in));
 
-            while (buff.ready()) {
+            while (true) {
                 String line = buff.readLine();
                 if(line.equals("menue_launch")) {
                     Main.launch();
Index: 17_01_2022_Resueme_E-Chess.txt
===================================================================
diff --git a/17_01_2022_Resueme_E-Chess.txt b/17_01_2022_Resueme_E-Chess.txt
deleted file mode 100644
--- a/17_01_2022_Resueme_E-Chess.txt	
+++ /dev/null	
@@ -1,4 +0,0 @@
-Es wurde sich letzte Woche mit dem GitHub Repository auseinandergesetzt, speziell mit Pull Request und die Organisation.
-Außerdem wurde mit der Programmierung für den Schach-Algorithmus und mit der Oberfläche angefangen und derzeit sind wir auch noch im Zeitplan.
-Diese Woche wollen wir die erste Version der Oberfläche und des Menüs fertig machen und die Branches in GitHub einrichten.
-Weiters wird die Programmierung des Schach-Alogorithmus fortgeführt.
\ No newline at end of file
Index: README.md
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	
+++ /dev/null	
@@ -1,25 +0,0 @@
-# Schachspiel
-Das Schach Projekt von Gruppe E.
-
-## Anforderungen
-Programmiersprache: java
-
-Zwei Spieler sollen auf zwei verschiedenen Endgeräten gegeneinander Schach spielen können.
-
-## UI
-Das Menü sieht so aus:
-
-Das Programm sieht wiefolgt aus:
-![image](https://user-images.githubusercontent.com/91054413/151655637-dd45183b-d81e-44b2-9631-e91fab75ce06.png)
-
-## Verbindung
-Dieses Programm startet mit einem Menü, indem man sich dann mit einem zweiten Spieler über Sockets verbinden kann und somit gegeneindander Schach kann.
-
-## Regeln
-Die Regeln sind die Regeln von Schach.
-
-## Ende des Spiels
-Das Spiel is vorbei, wenn eine der Spieler seinen König verliert.
-
-## Zeiteinteilung
-https://docs.google.com/spreadsheets/d/1UnxE3jU4z1MMn8Kzz_JcdcX9pQwGRV2zX-LpgJYb1lU/edit?usp=sharing
Index: 24_01_2022_Resueme_E-Chess.txt
===================================================================
diff --git a/24_01_2022_Resueme_E-Chess.txt b/24_01_2022_Resueme_E-Chess.txt
deleted file mode 100644
--- a/24_01_2022_Resueme_E-Chess.txt	
+++ /dev/null	
@@ -1,4 +0,0 @@
-Es wurden letzte Woche alle Klassen für die einzelnen Figuren und das Schachbrett programmiert und die erste Version der Oberfläche, 
-also Menü und Schachbrett ist auch schon fertig. Außerdem wurde mit der Server-Client Verbindung begonnen und bis jetzt hat all dies gut funktioniert.
-Die Oberfläche ist noch nicht gut gelungen, aber die zweite Version dieser wird diese Woche fertiggestellt.
-Diese Woche wollen wir die Server-Client Verbindung finalisieren und die komplette Oberfläche bearbeiten.
\ No newline at end of file
